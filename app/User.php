<?php

namespace App;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Http\UploadedFile;
use Illuminate\Notifications\Notifiable;
use Illuminate\Support\Facades\Storage;
use Spatie\Permission\Traits\HasRoles;
use function foo\func;

class User extends Authenticatable
{
    use Notifiable, HasRoles;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'password', 'avatar'
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    protected static function booted()
    {
        parent::booted(); // TODO: Change the autogenerated stub
        static::deleting(function (User $user) {
            if(Storage::exists($user->avatar)) {
                Storage::delete($user->avatar);
            }
        });
    }

    public function setAvatarAttribute(?UploadedFile $file) {
        if($file) {
            if(Storage::exists($this->avatar)) {
                Storage::delete($this->avatar);
            }
            $name = Storage::putFile('img', $file, 'public');
            $this->attributes['avatar'] = $name;
        }
    }
}
